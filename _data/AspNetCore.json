{"Data":{"Blog":{"FeedItems":[{"Title":"ASP.NET Core 2.1.0 now available","PublishedOn":"2018-05-30T17:20:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we&#039;re thrilled to announce the release of ASP.NET Core 2.1.0! This is the latest release of our open-source and cross-platform web framework for .NET and it&#039;s now ready for production...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/30/asp-net-core-2-1-0-now-available/","RawContent":null},{"Title":"Troubleshooting ASP.NET Core Performance Problems","PublishedOn":"2018-05-23T14:26:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post by Mike Rousos I recently had an opportunity to help a developer with an ASP.NET Core app that was functionally correct but slow when under a heavy user load. We found a few...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/23/asp-net-core-performance-improvements/","RawContent":null},{"Title":"Announcing ASP.NET Providers Connected Service Visual Studio Extension","PublishedOn":"2018-05-22T17:43:31+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Provider pattern was introduced in ASP.NET 2.0 and it gives the developers the flexibility of where to store the state of ASP.NET features (e.g. Session State, Membership, Output Cache etc.). In...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/22/announcing-asp-net-providers-connected-service-visual-studio-extension/","RawContent":null},{"Title":"A Penny Saved is a Ton of Serverless Compute Earned","PublishedOn":"2018-05-21T20:08:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Scott Guthrie recently shared one of my favorite anecdotes on his Azure Red Shirt Tour. A Microsoft customer regularly invokes 1 billion (yes, that’s with a “B”) Azure Functions per day. The customer...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/21/a-penny-saved-is-a-ton-of-serverless-compute-earned/","RawContent":null},{"Title":"Exploring Azure App Service – Web Apps and SQL Azure","PublishedOn":"2018-05-18T19:40:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There is a good chance that your web app uses a database. In my previous post introducing Azure App Service, I showed some of the benefits of hosting apps in Azure App Service, and how easy it is to...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/18/exploring-azure-app-service-web-apps-and-sql-azure/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-rc1 now available","PublishedOn":"2018-05-07T18:00:55+00:00","CommentsCount":21,"FacebookCount":0,"Summary":"Today we’re happy to announce the first release candidate of ASP.NET Core 2.1! This release should be very close to the final stable release of ASP.NET Core 2.1 and includes primarily bug fixes and...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/07/asp-net-core-2-1-0-rc1-now-available/","RawContent":null},{"Title":"Exploring Azure App Service – Introduction","PublishedOn":"2018-05-02T23:01:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you ever needed to quickly stand up a web site, or web API app that was publicly available? Is your team or organization thinking about moving to the cloud but aren’t sure the best place to...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/exploring-azure-app-service-introduction/","RawContent":null},{"Title":"Blazor 0.3.0 experimental release now available","PublishedOn":"2018-05-02T19:50:50+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"Blazor 0.3.0 is now available! This release includes important bug fixes and many new feature enhancements. New features in this release (details below): Project templates updated to use Bootstrap 4...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/blazor-0-3-0-experimental-release-now-available/","RawContent":null},{"Title":"Announcing ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-05-02T19:35:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this release in the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/announcing-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null},{"Title":"Cosmos DB Solves Common Data Challenges in App Development","PublishedOn":"2018-04-27T17:35:54+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"When considering how to implement your application with a relational database, it can change how you build it dramatically. Some of these challenges include adding an abstract implementation of the...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/27/cosmos-db-solves-common-data-challenges/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7752886151","Type":"IssuesEvent","CreatedAt":"2018-05-30T21:50:21","Actor":"fragilerus","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3174","RelatedDescription":"Closed issue \"Remove UseExceptionHandler() extension\" (#3174) at aspnet/Home","RelatedBody":"The ExcptionHanlerMiddleware no longer supports empty options. Either ExceptionHandler or ExceptionHandlingPath has to be set. Therefore, the ExceptionHandlerExtensions.UseExceptionHandler() overload that takes no arguments can't be used. Either remove this or set a default for the options.\r\n"},{"Id":"7752252461","Type":"IssuesEvent","CreatedAt":"2018-05-30T19:41:23","Actor":"fragilerus","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3174","RelatedDescription":"Opened issue \"Remove UseExceptionHandler() extension\" (#3174) at aspnet/Home","RelatedBody":"The ExcptionHanlerMiddleware no longer supports empty options. Either ExceptionHandler or ExceptionHandlingPath has to be set. Therefore, the ExceptionHandlerExtensions.UseExceptionHandler() overload that takes no arguments can't be used. Either remove this or set a default for the options.\r\n"},{"Id":"7746773663","Type":"IssuesEvent","CreatedAt":"2018-05-29T23:16:10","Actor":"ObsidianMinor","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3173","RelatedDescription":"Opened issue \"Generic pipeline\" (#3173) at aspnet/Home","RelatedBody":"## Generic pipeline\r\n\r\nWe've decoupled the HTTP pipeline from the host with the generic host, but now we could consider decoupling the \"HTTP\" from the pipeline itself.\r\n\r\n### Introducing Microsoft.Extensions.ApplicationPipeline\r\n\r\nThe generic pipeline would allow consumers to easily create pipelines with custom contexts for non-HTTP workloads. For example, clients and non-HTTP servers such as TCP servers with custom message systems or language servers reading and writing to standard IO.\r\n\r\n#### ICommandSource\r\n\r\n```cs\r\npublic interface ICommandSource\r\n{\r\n    IFeatureCollection Features { get; }\r\n\r\n    Task StartAsync<TContext>(IApplication<TContext> application, CancellationToken cancellationToken);\r\n\r\n    Task StopAsync(CancellationToken cancellationToken);\r\n}\r\n```\r\n\r\nThe source of all data, and the first main component that libraries and applications implement to use the pipeline. Performs the same function as the `IServer` interface in ASP.NET Core. Represents a generic source of \"commands\", or data that needs to be processed by the application. It's started by running StartAsync with the specified `IApplication` and stopped with StopAsync. It also contains a feature collection for the pipeline builder, however since `IFeatureCollection` is attached to Microsoft.AspNetCore.Http.Features it might makes sense to move it to another extension lib such as Microsoft.Extensions.Primitives.\r\n\r\n#### IApplication\r\n\r\n```cs\r\npublic interface IApplication<TContext>\r\n{\r\n    TContext CreateContext(IFeatureCollection features);\r\n\r\n    void DisposeContext(TContext context, Exception exception);\r\n\r\n    Task ProcessAsync(TContext context);\r\n}\r\n```\r\n\r\nCreates contexts for processing data through a feature collection and processes it, after which the context is disposed. The second main component that libraries and applications implement to use the pipeline. Performs the same function as the `IHttpApplication<TContext>` interface in ASP.NET Core.\r\n\r\n#### IApplicationBuilder\r\n\r\n```cs\r\npublic delegate Task ApplicationDelegate<TContext>(TContext context);\r\n\r\npublic interface IApplicationBuilder<TContext>\r\n{\r\n    IServiceProvider ApplicationServices { get; set; }\r\n\r\n    IDictionary<string, object> Properties { get; }\r\n\r\n    IFeatureCollection SourceFeatures { get; } // features of the command source\r\n\r\n    ApplicationDelegate<TContext> Build();\r\n\r\n    IApplicationBuilder<TContext> New();\r\n\r\n    IApplicationBuilder<TContext> Use(Func<ApplicationDelegate<TContext>, ApplicationDelegate<TContext>> middleware);\r\n}\r\n```\r\n\r\n`IApplicationBuilder` is the `IApplicationBuilder` from ASP.NET Core, but generic as to allow custom contexts. To extend it, extension methods should use the proper context being used such as `HttpContext`.\r\n\r\nFor example, UseExceptionHandler would be modified to look like:\r\n\r\n```cs\r\npublic static IApplicationBuilder<HttpContext> UseExceptionHandler(this IApplicationBuilder<HttpContext> app);\r\n```\r\n\r\n#### Open questions\r\n\r\n * The naming of `IApplicationBuilder` is a bit confusing. It's kept as `IApplicationBuilder` in this proposal because that's the original name of the feature before, however with the `IApplication` interface being introduced as a replacement for `IHttpApplication`, it might be a bit confusing since `IApplicationBuilder` doesn't build an `IApplication`. Should it be renamed to something else like `IApplicationPipelineBuilder`?\r\n * Could we provide classes that run our command source and application pipeline for the consumer or must we leave it up to the consumer to implement every time?"},{"Id":"7746478507","Type":"IssuesEvent","CreatedAt":"2018-05-29T21:52:34","Actor":"ryanbrandenburg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2643","RelatedDescription":"Closed issue \"ResourceManagerStringLocalizerFactory.CreateResourceManagerStringLocalizer fails for dynamic assemblies\" (#2643) at aspnet/Home","RelatedBody":"_From @pranavkm on Monday, March 20, 2017 9:54:22 AM_\r\n\r\nMoved from https://github.com/aspnet/Mvc/issues/5994\r\n\r\n\r\nWhen use `<div asp-validation-summary=\"All\"></div>` and no validation error exists it throws exception below.\r\n\r\nWhen I use `<div asp-validation-summary=\"ModelOnly\"></div> `or some validation errors occurs it works, but I in this case I do not see all errors in summary. \r\n\r\n```\r\nSystem.NotSupportedException: The invoked member is not supported in a dynamic assembly.\r\n   at System.Reflection.Emit.InternalAssemblyBuilder.GetManifestResourceNames()\r\n   at System.Resources.ManifestBasedResourceGroveler.HasNeutralResources(CultureInfo culture, String defaultResName)\r\n   at System.Resources.ResourceManager.CommonAssemblyInit()\r\n   at System.Resources.ResourceManager..ctor(String baseName, Assembly assembly)\r\n   at Microsoft.Extensions.Localization.ResourceManagerStringLocalizerFactory.CreateResourceManagerStringLocalizer(Assembly assembly, String baseName)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Microsoft.AspNetCore.Mvc.DataAnnotations.Internal.DataAnnotationsMetadataProvider.CreateDisplayMetadata(DisplayMetadataProviderContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.DefaultCompositeMetadataDetailsProvider.CreateDisplayMetadata(DisplayMetadataProviderContext context)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.get_DisplayMetadata()\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.get_Order()\r\n   at System.Linq.EnumerableSorter`2.ComputeKeys(TElement[] elements, Int32 count)\r\n   at System.Linq.EnumerableSorter`1.Sort(TElement[] elements, Int32 count)\r\n   at System.Linq.OrderedEnumerable`1.<GetEnumerator>d__1.MoveNext()\r\n   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)\r\n   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.get_Properties()\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ValidationHelpers.Visit(ModelStateDictionary dictionary, ModelStateEntry modelStateEntry, ModelMetadata metadata, List`1 orderedModelStateEntries)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ValidationHelpers.GetModelStateList(ViewDataDictionary viewData, Boolean excludePropertyErrors)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GenerateValidationSummary(ViewContext viewContext, Boolean excludePropertyErrors, String message, String headerTag, Object htmlAttributes)\r\n   at Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper.Process(TagHelperContext context, TagHelperOutput output)\r\n   at Microsoft.AspNetCore.Razor.TagHelpers.TagHelper.ProcessAsync(TagHelperContext context, TagHelperOutput output)\r\n   at Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner.<RunAsync>d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at AspNetCore._Views_SAPBetriebsmittelanforderung_Edit_cshtml.<ExecuteAsync>d__48.MoveNext() in /Views/SAPBetriebsmittelanforderung/Edit.cshtml:line 24\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorView.<RenderPageAsync>d__14.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorView.<RenderAsync>d__13.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.<ExecuteAsync>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.ViewResult.<ExecuteResultAsync>d__26.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeResultAsync>d__30.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeNextResultFilterAsync>d__28.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ResultExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeNextResourceFilter>d__22.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeAsync>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.<Invoke>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.<Invoke>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.<Invoke>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.<Invoke>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.<Invoke>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.<Invoke>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.<Invoke>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.<Invoke>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.VisualStudio.Web.BrowserLink.Runtime.BrowserLinkMiddleware.<ExecuteWithFilter>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.<Invoke>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\n```\r\n\r\n_Copied from original issue: aspnet/Localization#345_"},{"Id":"7746065545","Type":"IssuesEvent","CreatedAt":"2018-05-29T20:25:50","Actor":"scottsauber","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3172","RelatedDescription":"Opened issue \"Using Microsoft.Extensions.DependencyInjection with ASP.NET 4.x Scoped Services Are Singletons\" (#3172) at aspnet/Home","RelatedBody":"Using the code found on this blog post: http://scottdorman.github.io/2016/03/17/integrating-asp.net-core-dependency-injection-in-mvc-4/ results in Scoped Services that are really Singletons, because CreateScope() is never called.\r\n\r\nAre there any examples of using Microsoft.Extensions.DependencyInjection (M.E.DI) with ASP.NET 4?\r\n\r\nThe reason why I want to use M.E.DI instead of SimpleInjector, Autofac, Ninject, etc.  is because we have a customer-facing app that is built on ASP.NET Core and uses Identity.  Then we have an existing \"back-office\" app that already does a bunch of stuff, one of them being manage users for the customer-facing app.\r\n\r\nWe wanted to use M.E.DI so we can share the configuration of things like `UserManager` between the two applications easily.  Also handwiring up all the dependencies that ASP.NET Core Identity has is non-trivial, and want to get the free updates in case new services are required in future updates that `services.AddIdentity` takes care of.\r\n\r\nThanks!"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7754137750","Type":"IssuesEvent","CreatedAt":"2018-05-31T05:03:13","Actor":"lghinet","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2410","RelatedDescription":"Opened issue \"Module not found: Can't resolve 'tslib' in '...@aspnet\\signalr\\dist\\esm'\" (#2410) at aspnet/SignalR","RelatedBody":"Hello,\r\ni get the following error using \"@aspnet/signalr\": \"1.0.0\", and creat-react-app \r\n\r\n```\r\nFailed to compile.\r\n\r\n./node_modules/@aspnet/signalr/dist/esm/Errors.js\r\nModule not found: Can't resolve 'tslib' in 'D:\\VSTS\\LSNG\\node_modules\\@aspnet\\signalr\\dist\\esm'\r\n```"},{"Id":"7753344103","Type":"PullRequestEvent","CreatedAt":"2018-05-31T00:04:49","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2388","RelatedDescription":"Merged pull request \" TypeScript strict mode\" (#2388) at aspnet/SignalR","RelatedBody":"Fixes https://github.com/aspnet/SignalR/issues/2326"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7753940829","Type":"IssuesEvent","CreatedAt":"2018-05-31T03:44:02","Actor":"embryologist","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7840","RelatedDescription":"Opened issue \"How to override model state error message in asp.net Core 2.1?\" (#7840) at aspnet/Mvc","RelatedBody":"#### Is this a Bug or Feature request?:\r\nQuestion\r\n\r\n#### Steps to reproduce (preferably a link to a GitHub repo with a repro project):\r\nshown below\r\n\r\n#### Description of the problem:\r\n\r\nI can't seem to be able to override the error message from model state validation for `int` or nullable ones `int?`. In the previous versions of Asp.Net Core I used to receive that the input is not valid, now I am getting this unfriendly error,\r\n\r\n> {\"streetNo\":[\"Could not convert string to integer: abc. Path 'cityId',\r\n> line 24, position 23.\"]}\r\n\r\nso I am trying to work around it using custom validation attribute,\r\n\r\nI created this class,\r\n\r\n     public class IsInt : ValidationAttribute {\r\n            public IsInt () : base () { }\r\n    \r\n            public override bool IsValid (object value) {\r\n                Console.WriteLine (value);\r\n                if (value.IsNullObject ()) {\r\n                    return true;\r\n                } else {\r\n                    if (value.GetType () == typeof (int?)) {\r\n                        return true;\r\n    \r\n                    } else {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            protected override ValidationResult IsValid (\r\n                Object value,\r\n                ValidationContext validationContext) {\r\n    \r\n                var message = \"Only number is allowed\";\r\n                return new ValidationResult (message);\r\n            }\r\n        }\r\n\r\nand I implement it this way,\r\n\r\n    [IsInt]\r\n    public int? StreetNo { get; set; }\r\n\r\nThe validation attribute does not seem to work as intended, if I enter a string, i.e. \"abc\" I still receive the mentioned model error message, it only works if the string has numbers in it, i.e. \"83444\"\r\n\r\nWhat am I missing here?\r\n#### Version of `Microsoft.AspNetCore.All`:\r\n"},{"Id":"7753131871","Type":"PullRequestEvent","CreatedAt":"2018-05-30T22:55:33","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7839","RelatedDescription":"Merged pull request \"[Fixes #7609] ApiBehaviorApplicationModelProvider overwrites existing…\" (#7839) at aspnet/Mvc","RelatedBody":"… BindingInfo in entirety when inferring binding sources\r\n\r\nhttps://github.com/aspnet/Mvc/issues/7804"},{"Id":"7752558800","Type":"IssuesEvent","CreatedAt":"2018-05-30T20:40:49","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7837","RelatedDescription":"Closed issue \"How to Seed WebHost Data When Using WebApplicationFactory<Startup> ?\" (#7837) at aspnet/Mvc","RelatedBody":"#### Is this a Bug or Feature request?:\r\nBug? Lack of docs if it's already available.\r\n\r\n#### Steps to reproduce (preferrably a link to a GitHub repo with a repro project):\r\n\r\nI can seed data using WebHostBuilder using code like this:\r\nhttps://github.com/dotnet-architecture/eShopOnWeb/blob/netcore2.1/src/Web/Program.cs#L16-L39\r\n\r\nI'd like to be able to seed data before my functional tests. I'm using the new `WebApplicationFactory<T>` but am not seeing a simple way to hook into this.\r\n\r\n#### Description of the problem:\r\n\r\nI can configure the `WebHostBuilder` using code like this:\r\n\r\n```\r\n    public class CatalogControllerIndex : IClassFixture<WebApplicationFactory<Startup>>\r\n    {\r\n        public CatalogControllerIndex(WebApplicationFactory<Startup> fixture)\r\n        {\r\n            var factory = fixture.Factories.FirstOrDefault() ?? fixture.WithWebHostBuilder(ConfigureWebHostBuilder);\r\n            Client = factory.CreateClient();\r\n        }\r\n\r\n        private static void ConfigureWebHostBuilder(IWebHostBuilder builder) =>\r\n            builder.UseEnvironment(\"Testing\");\r\n\r\n        public HttpClient Client { get; }\r\n...\r\n```\r\n\r\nHowever, I don't see how I can get to an actual instance of the built host, so that I can get to its dbContext, so that I can use it to add test data. Should I just try and do it using something like `builder.Configure()` ?\r\n\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n\r\n2.1\r\n\r\n"},{"Id":"7751381946","Type":"IssuesEvent","CreatedAt":"2018-05-30T16:52:58","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7824","RelatedDescription":"Closed issue \"Make the ModelBinder support the JsonPropertyAttribute\" (#7824) at aspnet/Mvc","RelatedBody":"#### Is this a Bug or Feature request?:\r\nFeature\r\n\r\n\r\n#### Steps to reproduce (preferrably a link to a GitHub repo with a repro project):\r\nTry to bind to \"smtp-id\" in a web api call.  It cannot be done, as the dash is not allowed in a property name.  \r\n\r\n#### Description of the problem:\r\nBut there is no way to put an attribute on the Input Model to tell the ModelBinder to bind to \"SmtpId\"\r\n\r\npublic class InputModel{\r\n     [JsonProperty(\"smpt-id\")]//It would be great if this would work.\r\n     public string SmtpId{get;set;}\r\n}\r\n\r\nI encountered this issue trying to process SendGrid event hooks.  They use the dash and I cannot get them to change it.\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`: 2.02\r\n\r\n\r\n"},{"Id":"7751379336","Type":"IssuesEvent","CreatedAt":"2018-05-30T16:52:26","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7825","RelatedDescription":"Closed issue \"Can't create MVC plugins in .NET Core\" (#7825) at aspnet/Mvc","RelatedBody":"_From @gordon-matt on May 24, 2018 1:50_\n\nI'm having a very big problem with migrating my plugins system over to .NET Core. I keep getting the following error for any plugins that contain MVC views, controllers, etc:\r\n\r\n```\r\nAn error occurred during the compilation of a resource required to process this request. Please review the following specific error details and modify your source code appropriately.\r\nGenerated Code\r\nOne or more compilation references are missing. Ensure that your project is referencing 'Microsoft.NET.Sdk.Web' and the 'PreserveCompilationContext' property is not set to false.\r\n\r\n    Type expected\r\n\r\n            [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\r\n            public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }\r\n            [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\r\n            public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }\r\n            [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\r\n            public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<JQueryFormBuilderBlock> Html { get; private set; }\r\n\r\n        }\r\n\r\n    }\r\n    #pragma warning restore 1591\r\n\t\r\n\t//etc...\r\n```\r\n\r\nAnd when I set the project SDK to `<Project Sdk=\"Microsoft.NET.Sdk.Web\">`, then I get the following error instead:\r\n\r\n```\r\nSystem.InvalidOperationException: Cannot find compilation library location for package 'Mantle.Plugins.Messaging.Forums'\r\n   at Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths(ICompilationAssemblyResolver resolver, List`1 assemblies)\r\n   at Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths()\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.AssemblyPart.<>c.<GetReferencePaths>b__8_0(CompilationLibrary library)\r\n   at System.Linq.Enumerable.SelectManySingleSelectorIterator`2.MoveNext()\r\n   at Microsoft.AspNetCore.Mvc.Razor.Compilation.MetadataReferenceFeatureProvider.PopulateFeature(IEnumerable`1 parts, MetadataReferenceFeature feature)\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.PopulateFeature[TFeature](TFeature feature)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorReferenceManager.GetCompilationReferences()\r\n   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorReferenceManager.get_CompilationReferences()\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.LazyMetadataReferenceFeature.get_References()\r\n   at Microsoft.CodeAnalysis.Razor.CompilationTagHelperFeature.GetDescriptors()\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorTagHelperBinderPhase.ExecuteCore(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorEnginePhaseBase.Execute(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorEngine.Process(RazorCodeDocument document)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorTemplateEngine.GenerateCode(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(String relativePath)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CreateCacheEntry(String normalizedPath)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorPageFactoryProvider.CreateFactory(String relativePath)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.CreateCacheResult(HashSet`1 expirationTokens, String relativePath, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.OnCacheMiss(ViewLocationExpanderContext expanderContext, ViewLocationCacheKey cacheKey)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.LocatePageFromViewLocations(ActionContext actionContext, String pageName, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindView(ActionContext context, String viewName, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.FindView(ActionContext context, String viewName, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ViewResultExecutor.FindView(ActionContext actionContext, ViewResult viewResult)\r\n   at Microsoft.AspNetCore.Mvc.ViewResult.<ExecuteResultAsync>d__26.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeResultAsync>d__19.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextResultFilterAsync>d__24.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextResourceFilter>d__22.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeFilterPipelineAsync>d__17.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeAsync>d__15.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at SaasKit.Multitenancy.Internal.TenantResolutionMiddleware`1.<Invoke>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Session.SessionMiddleware.<Invoke>d__9.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.AspNetCore.Session.SessionMiddleware.<Invoke>d__9.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware.<Invoke>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.<Invoke>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.<Invoke>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\n```\r\n\r\nAfter searching around a bit, I tried the following to no avail:\r\n\r\n```\r\n<MvcRazorCompileOnPublish>false</MvcRazorCompileOnPublish>\r\n```\r\n\r\nI could really use some help here, as it seems that creating plugins in .NET Core is impossible.\r\n\r\nIs there anything else you need that would be helpful? This is for a CMS of mine that I am porting from MVC5 to .NET Core 2. I have not yet made the repo public because it is not ready, but I am happy to add individuals here if viewing the source code helps solve the issue.\n\n_Copied from original issue: dotnet/sdk#2268_"},{"Id":"7751255920","Type":"IssuesEvent","CreatedAt":"2018-05-30T16:29:04","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7836","RelatedDescription":"Closed issue \"ViewResultExecutor changed behavior\" (#7836) at aspnet/Mvc","RelatedBody":"#### Is this a Bug or Feature request?:\r\nNot sure.\r\n\r\n#### Steps to reproduce (preferrably a link to a GitHub repo with a repro project):\r\nCreate a new type derived from `ViewResultExecutor`.  i.e.:\r\n```\r\npublic class TestViewResultExecutor : ViewResultExecutor\r\n{\r\n    public override async Task ExecuteAsync(} \r\n    {  // <-- put breakpoint here\r\n            var viewPage = (view as RazorView)?.RazorPage as IViewPageRenderEvents;\r\n\r\n            var renderContext = null; // (set to null for this test only; not null in actual source)\r\n\r\n            viewPage?.OnBeforeRenderView(renderContext); // EVENT ON CUSTOM VIEW\r\n\r\n            try\r\n            {\r\n                await base.ExecuteAsync(actionContext, view, viewResult);\r\n            }\r\n            catch (Exception ex) when (actionContext.HttpContext.Response.Body.CanWrite)\r\n            {\r\n                var result = viewPage?.OnRenderException(renderContext, ex); // EVENT ON CUSTOM VIEW\r\n                if (result == null) throw ex;\r\n                result.WriteTo(actionContext.HttpContext.Response.Body);\r\n            }\r\n\r\n            if (renderContext?.HasFilter == true)\r\n                renderContext.ApplyOutputFilter(); // (CUSTOM POST FILTERIG)\r\n\r\n            viewPage?.OnAfterRenderView(renderContext); // EVENT ON CUSTOM VIEW\r\n    }\r\n}\r\n\r\npublic interface IViewPageRenderEvents\r\n{\r\n    void OnViewFound(ActionContext actionContext, ViewResult viewResult, ViewEngineResult searchResult);\r\n    IHtmlContent OnRenderException(IViewPageRenderContext renderContext, Exception ex);\r\n    void OnBeforeRenderView(IViewPageRenderContext renderContext);\r\n    void OnViewActivated(IRazorPage page, ViewContext context);\r\n    void OnAfterRenderView(IViewPageRenderContext renderContext);\r\n}\r\n\r\npublic interface IViewPageRenderContext { /*etc.*/ } \r\n\r\n// *** Don't forget to register the new type BEFORE you add MVC ***\r\n services.TryAddSingleton<ViewResultExecutor, TestViewResultExecutor>();\r\n```\r\n\r\n1. Create a new proejct.\r\n2. Register the new executor (add the service BEFORE MVC).\r\n3. Create an index.cshtml page that loads a partial view, and in that partial view load one more partial view.\r\n4. The breakpoint (as noted in the code) used to be hit for every view (including partials).\r\n\r\n#### Description of the problem:\r\nI have similar code to the above that is now broken.  It used to be that the breakpoint was hit for EVERY view (INCLUDING `_layout.cshtml`).  This is no longer the case.  I don't see any notes that this behaviour was a breaking change.  I use this to detected nested page renders, which allows be to build a stack (since you guys didn't bother to port over the `System.Web.WebPages.TemplateStack` _idea_).  If this is not a bug then please suggest another way to detect nested pages.\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`: 2.0.4\r\n\r\n\r\n<!--\r\n                                    --- NOTE ---\r\n1.  Try enabling logging (in the most verbose level) and see if the details help you in fixing\r\n    the issue you are seeing. Share the logs too if it helps in diagnosing the issue faster.\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging\r\n\r\n2.  If you are seeing an exception, include the full exceptions details (message and stack trace).\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/error-handling\r\n\r\n3.  If you believe you have an issue that affects the security of the platform please do\r\n    not create an issue, instead email your issue to 'secure@microsoft.com'. Your report may\r\n    be eligible for our bug bounty. More info: https://technet.microsoft.com/en-us/mt764065.aspx\r\n-->\r\n"},{"Id":"7749747889","Type":"PullRequestEvent","CreatedAt":"2018-05-30T12:31:25","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7839","RelatedDescription":"Opened pull request \"[Fixes #7609] ApiBehaviorApplicationModelProvider overwrites existing…\" (#7839) at aspnet/Mvc","RelatedBody":"… BindingInfo in entirety when inferring binding sources\r\n\r\nhttps://github.com/aspnet/Mvc/issues/7804"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7751811995","Type":"IssuesEvent","CreatedAt":"2018-05-30T18:16:12","Actor":"krijnm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1806","RelatedDescription":"Closed issue \"FindByIdAsync vs FindByNameAsync\" (#1806) at aspnet/Identity","RelatedBody":"I have noticed a difference in implementation between FindByIdAsync and FindByNameAsync.\r\n\r\nFindByIdAsync executes UsersSet.FindAsync(new object[] { id },.. which will attach and track the user, if found. FindByNameAsync uses the DbSet IQueryable method Users.FirstOrDefaultAsync(u => u.NormalizedUserName == normalizedUserName, .. which does not track the user.\r\n\r\nThe flow UserManager => FindById + Update could  result in a crash -cannot be tracked because another instance with the same key value for {'ApplicationUserId'} is already being tracked ...\r\n\r\nThis is because the UserManager.UpdateAsync executes Context.Attach(user) without testing if the user is already present in the local storage: this.UsersSet.Local.Contains(user)"},{"Id":"7751712299","Type":"PullRequestEvent","CreatedAt":"2018-05-30T17:57:01","Actor":"natemcmaster","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1808","RelatedDescription":"Merged pull request \"[2.1.1] Update package versions\" (#1808) at aspnet/Identity","RelatedBody":null},{"Id":"7751379556","Type":"PullRequestEvent","CreatedAt":"2018-05-30T16:52:29","Actor":"natemcmaster","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1808","RelatedDescription":"Opened pull request \"[2.1.1] Update package versions\" (#1808) at aspnet/Identity","RelatedBody":null},{"Id":"7750139798","Type":"IssuesEvent","CreatedAt":"2018-05-30T13:37:23","Actor":"tatarincev","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1807","RelatedDescription":"Opened issue \"RoleManager.UpdateRole caused  EF ChangeTracker already being tracked exception\" (#1807) at aspnet/Identity","RelatedBody":"## Steps to reproduce:\r\n```\r\nvar role = await RoleManager.FindByNameAsync(\"admin\");\r\nrole.ConcurrencyStamp =  Guid.NewGuid().ToString();\r\nawait RoleManager.UpdateAsync(role);\r\n```\r\nGot the exception\r\n`value for {'Id'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.'`\r\n\r\n## Assumption \r\nSeems this error happens due to `RoleManager` calls https://github.com/aspnet/Identity/blob/85f8a49aef68bf9763cd9854ce1dd4a26a7c5d3c/src/Core/RoleManager.cs#L450 before role changes saving and  `RoleValidator` executes `FindRoleByName` method which in result add  `role` to `DbContext` `ChangeTracker` and causes this error in follow line https://github.com/aspnet/Identity/blob/855f7532aeaba3fa65e6ea2502e6b45dca50bab1/src/EF/RoleStore.cs#L165\r\n"},{"Id":"7746244821","Type":"IssuesEvent","CreatedAt":"2018-05-29T21:00:48","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1779","RelatedDescription":"Closed issue \"SignInManager: XML Doc wrong description of parameter\" (#1779) at aspnet/Identity","RelatedBody":"Just stumbled across this\r\n\r\n    /// <param name=\"logger\">The logger used to log messages, warnings and errors.</param>\r\n    /// <param name=\"schemes\">The logger used to log messages, warnings and errors.</param>\r\nin\r\nhttps://github.com/aspnet/Identity/blob/15a82284ce52dc8932c49f3246763f3ea05a3568/src/Microsoft.AspNetCore.Identity/SignInManager.cs#L33\r\n\r\nThe description for schemes is wrong."},{"Id":"7746209731","Type":"PullRequestEvent","CreatedAt":"2018-05-29T20:53:59","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1801","RelatedDescription":"Merged pull request \"Add additional test assertions\" (#1801) at aspnet/Identity","RelatedBody":""},{"Id":"7746029525","Type":"IssuesEvent","CreatedAt":"2018-05-29T20:18:22","Actor":"krijnm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1806","RelatedDescription":"Opened issue \"FindByIdAsync vs FindByNameAsync\" (#1806) at aspnet/Identity","RelatedBody":"I have noticed a difference in implementation between FindByIdAsync and FindByNameAsync.\r\n\r\nFindByIdAsync executes UsersSet.FindAsync(new object[] { id },.. which will attach and track the user, if found. FindByNameAsync uses the DbSet IQueryable method Users.FirstOrDefaultAsync(u => u.NormalizedUserName == normalizedUserName, .. which does not track the user.\r\n\r\nThe flow UserManager => FindById + Update could  result in a crash -cannot be tracked because another instance with the same key value for {'ApplicationUserId'} is already being tracked ...\r\n\r\nThis is because the UserManager.UpdateAsync executes Context.Attach(user) without testing if the user is already present in the local storage: this.UsersSet.Local.Contains(user)"},{"Id":"7736171459","Type":"PullRequestEvent","CreatedAt":"2018-05-27T23:26:20","Actor":"hikalkan","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1805","RelatedDescription":"Opened pull request \"Allow to access internal methods of SignInManager from a derived class\" (#1805) at aspnet/Identity","RelatedBody":"For a multi-tenant application, I need to override these methods."}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7753385156","Type":"PullRequestEvent","CreatedAt":"2018-05-31T00:19:08","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2632","RelatedDescription":"Opened pull request \"Unskip and fix race in ConnectionClosedEvenIfAppSwallowsException\" (#2632) at aspnet/KestrelHttpServer","RelatedBody":"#2589\r\n\r\nThis is the same fix @mikeharder made for RequestTimesOutWhenRequestBodyNotReceivedAtSpecifiedMinimumRate with #2589."},{"Id":"7753019148","Type":"IssuesEvent","CreatedAt":"2018-05-30T22:24:04","Actor":"joshmackey","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2631","RelatedDescription":"Opened issue \"Misleading TaskCanceledException\" (#2631) at aspnet/KestrelHttpServer","RelatedBody":"I have a WebApi endpoint that parses out the Request.Body itself rather than using Model binding due to performance reasons.\r\n\r\nDuring some requests, I was getting a TaskCanceledException from a TextReader that I never gave any CancellationTokens too. After investigation, I found out that any read operations on the Request.Body after the Request was aborted will throw TaskCanceledExceptions. The stack trace at the time didn't list any Kestrel level code so I spent a lot of time trying to find out how a Stream can possibly cancel a token I never gave it.\r\n\r\nThis is a bit misleading and should probably change I think."},{"Id":"7752305406","Type":"IssuesEvent","CreatedAt":"2018-05-30T19:51:43","Actor":"shirhatti","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2630","RelatedDescription":"Opened issue \"http/2: Trailers\" (#2630) at aspnet/KestrelHttpServer","RelatedBody":"We need to re-visit trailers to design a consistent consumption model whether you're using http/1.1 or http/2"},{"Id":"7752271058","Type":"IssuesEvent","CreatedAt":"2018-05-30T19:45:04","Actor":"shirhatti","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2629","RelatedDescription":"Opened issue \"http/2: Flow Control\" (#2629) at aspnet/KestrelHttpServer","RelatedBody":"How does http/2 Flow Control impact our existing rate limits since all our limits are applied at a per connection-level?"},{"Id":"7752258571","Type":"IssuesEvent","CreatedAt":"2018-05-30T19:42:35","Actor":"shirhatti","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2628","RelatedDescription":"Opened issue \"http/2: Framing\" (#2628) at aspnet/KestrelHttpServer","RelatedBody":"Our current http/2 framing work pre-dates Memory/Span and will need to be re-visited for perf/quality"},{"Id":"7752202567","Type":"IssuesEvent","CreatedAt":"2018-05-30T19:31:25","Actor":"shirhatti","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2627","RelatedDescription":"Opened issue \"http/2: Settings\" (#2627) at aspnet/KestrelHttpServer","RelatedBody":"HTTP/2 allows for both the client and the server to send a SETTINGS frame to set preferences and constraints on how endpoints communicate.\r\n\r\nThe spec currently lists 6 supported SETTINGS Parameters\r\n\r\n- SETTINGS_HEADER_TABLE_SIZE (0x1)\r\n- SETTINGS_ENABLE_PUSH (0x2)\r\n- SETTINGS_MAX_CONCURRENT_STREAMS (0x3)\r\n- SETTINGS_INITIAL_WINDOW_SIZE (0x4)\r\n- SETTINGS_MAX_FRAME_SIZE (0x5)\r\n- SETTINGS_MAX_HEADER_LIST_SIZE (0x6)\r\n\r\nWe need to\r\n- [ ] Pick reasonable defaults and constraints on permissible values for each of these settings parameters.\r\n- [ ] Expose these settings via Kestrel Options\r\n\r\n"},{"Id":"7752184934","Type":"PullRequestEvent","CreatedAt":"2018-05-30T19:27:53","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2626","RelatedDescription":"Opened pull request \"Make ListenOptions.Protocols public again for HTTP/2 work\" (#2626) at aspnet/KestrelHttpServer","RelatedBody":"#73 Making this public again in preparation for HTTP/2 development."}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7753253139","Type":"IssuesEvent","CreatedAt":"2018-05-30T23:34:18","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2156","RelatedDescription":"Closed issue \"Add a couple of tests to Razor.Design for multi-targeting projects \" (#2156) at aspnet/Razor","RelatedBody":"This should ensure Sdk and package being consumed from a multi targeted project work"},{"Id":"7753058157","Type":"PullRequestEvent","CreatedAt":"2018-05-30T22:34:29","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2376","RelatedDescription":"Merged pull request \"Updates the Editor Nuget packages\" (#2376) at aspnet/Razor","RelatedBody":""},{"Id":"7752037751","Type":"IssuesEvent","CreatedAt":"2018-05-30T18:58:40","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2373","RelatedDescription":"Closed issue \"Track DocumentState information for fallback projects.\" (#2373) at aspnet/Razor","RelatedBody":"Today our default project host consumes Razor SDK information (only present in 2.1) to identify Razor files and their if they've been added or remove to the world. This way our project system can track document information despite being >= 2.1"},{"Id":"7751808101","Type":"PullRequestEvent","CreatedAt":"2018-05-30T18:15:27","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2377","RelatedDescription":"Merged pull request \"Add Razor document tracking to FallbackRazorProjectHost.\" (#2377) at aspnet/Razor","RelatedBody":"- VisualStudio defaults to adding a `<none>` link item when right click -> add existing item for Razor files; therefore, this also includes the knowledge of the \"None\" item group when finding Razor files.\r\n- Added unit and functional tests to verify the new `FallbackRazorProjectHost` behavior.\r\n- Added new schema items to represent the `Content` and `None` item type information (pulled from the project system repo).\r\n\r\n#2373"},{"Id":"7747127234","Type":"PullRequestEvent","CreatedAt":"2018-05-30T01:25:03","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2377","RelatedDescription":"Opened pull request \"Add Razor document tracking to FallbackRazorProjectHost.\" (#2377) at aspnet/Razor","RelatedBody":"- VisualStudio defaults to adding a `<none>` link item when right click -> add existing item for Razor files; therefore, this also includes the knowledge of the \"None\" item group when finding Razor files.\r\n- Added unit and functional tests to verify the new `FallbackRazorProjectHost` behavior.\r\n- Added new schema items to represent the `Content` and `None` item type information (pulled from the project system repo).\r\n\r\n#2373"},{"Id":"7746592585","Type":"IssuesEvent","CreatedAt":"2018-05-29T22:21:32","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2369","RelatedDescription":"Closed issue \"Port https://github.com/aspnet/Razor/issues/2363 to 2.1.1\" (#2369) at aspnet/Razor","RelatedBody":"Issue: https://github.com/aspnet/Razor/issues/2363\r\n\r\nPR: https://github.com/aspnet/Razor/pull/2368"},{"Id":"7746575189","Type":"PullRequestEvent","CreatedAt":"2018-05-29T22:17:03","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2375","RelatedDescription":"Merged pull request \"Allow publish to work when BuildProjectReferences=false\" (#2375) at aspnet/Razor","RelatedBody":"Fixes #2363"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7707144427","Type":"IssuesEvent","CreatedAt":"2018-05-21T21:26:33","Actor":"Fosol","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/146","RelatedDescription":"Closed issue \"How to nest files in a DNX project?\" (#146) at aspnet/Tooling","RelatedBody":"My search for answers has led me here.\n\nBy default a DNX project nest files like config.json -> config.debug.json\n\nI want to be able to nest files like config.json -> config.development.debug.json\n\nHow do I do this? I can no longer edit my project file to do this because someone has decided to extract all that functionality and hide it away in some black box. \n\nFeel free to point me to the right place to ask this question.\n\nThanks,\n Jeremy\n"},{"Id":"7687608828","Type":"IssuesEvent","CreatedAt":"2018-05-17T06:31:53","Actor":"Pichasepong","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Closed issue \"can not upload file FTPS. \" (#1072) at aspnet/Tooling","RelatedBody":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40155003-9812f0d8-59bb-11e8-82ae-8b8e7576b1a1.png)\r\n![2018-05-17_11-02-28](https://user-images.githubusercontent.com/12063904/40156168-efe61078-59c1-11e8-8c4c-7657ba2dd536.png)\r\n\r\n\r\n"},{"Id":"7686968343","Type":"IssuesEvent","CreatedAt":"2018-05-17T02:31:07","Actor":"Pichasepong","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Opened issue \"can not upload file FTPS. \" (#1072) at aspnet/Tooling","RelatedBody":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40153549-85278454-59b4-11e8-9b07-621a5de873f8.png)\r\n"},{"Id":"7686951810","Type":"IssuesEvent","CreatedAt":"2018-05-17T02:25:02","Actor":"Pichasepong","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1060","RelatedDescription":"Closed issue \"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. \" (#1060) at aspnet/Tooling","RelatedBody":"Problems installing on Server 2012 R2 ,Dot net core 1.0.1 vs 2015 tooling preview 2 error logs file.\r\n\r\n![product_dotnetcoreerror](https://user-images.githubusercontent.com/12063904/31985990-040a5f72-b991-11e7-9356-ddd06160a87c.jpg)\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7671761413","Type":"IssuesEvent","CreatedAt":"2018-05-14T16:32:50","Actor":"jkotalik","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/301","RelatedDescription":"Opened issue \"HttpsRedirectionMiddleware will not redirect to HTTPS if no port is available\" (#301) at aspnet/Announcements","RelatedBody":"We have changed the behavior of the HttpsRedirectionMiddleware between 2.1.0-preview2 to 2.1.0-rc1. Instead of always redirecting a request to HTTPS, we will now not redirect to HTTPS if no port is available. The HTTPS port can be specified by setting ```HttpsRedirectionOptions.HttpsPort```, setting the ASPNETCORE_HTTPS_PORT environment variable, or by setting an HTTPS url in launchsettings.json.\r\n\r\nIf you want to continue keeping the original behavior the HttpsRedirectionMiddleware which redirects to port 443, you can set the ```HttpsRedirectionOptions.HttpsPort = 443```.\r\n \r\n---\r\n\r\n*Please use aspnet/BasicMiddleware#329 for further discussion.*"},{"Id":"7644982634","Type":"IssuesEvent","CreatedAt":"2018-05-08T17:07:05","Actor":"blowdart","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/300","RelatedDescription":"Opened issue \"Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\" (#300) at aspnet/Announcements","RelatedBody":"# Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.0.\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft made an internal discovery of a security vulnerability in version 2.x of ASP.NET Core where\r\na specially crafted request can cause excess resource consumption in Kestrel.\r\n\r\n## Dicussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/Kestrel/issues/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigations for this issue.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThe vulnerability also affects any ASP.NET Core 2.0 project if it uses the following package versions, which must also be [updated](#app-update), in addition to addressing your proxy configuration :\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.All | 2.0.0, 2.0,3, 2.0.4, 2.0.5, 2.0.6, 2.0.7<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.8<br />2.1.0-rc1-final\r\n\r\n## Advisory FAQ\r\n\r\n### How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected packages](#affected-software) can be exposed to the vulnerability.\r\n\r\n### How do I fix the issue?\r\n\r\n---\r\n\r\nIf you're targeting .NET Core 2.x and the `Microsoft.AspNetCore.All` \"metapackage\":\r\n\r\n* Update its version number to 2.0.8 if you have targetted 2.0.x *OR*\r\n* Update its version number to 2.1.0-rc1-final if you have targetted previews of 2.1\r\n\r\nUpdating the metapackage will update the [affected packages](#affected-software)\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to a [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.Server.Kestrel.Core` version 2.0.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.Server.Kestrel.Core` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3 />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for each of the [vulnerable packages](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Server.Kestrel.Core` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_"},{"Id":"7630948535","Type":"IssuesEvent","CreatedAt":"2018-05-04T21:52:58","Actor":"danroth27","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/299","RelatedDescription":"Opened issue \"ASP.NET Core WebHooks moved out of ASP.NET Core 2.1\" (#299) at aspnet/Announcements","RelatedBody":"We are moving ASP.NET Core WebHooks out of the ASP.NET Core 2.1 to give more time to validate the design and implementation. We will continue to ship previews ASP.NET Core WebHooks packages, but they not ship as stable packages as part of the ASP.NET Core 2.1 release.\r\n\r\n### Why?\r\n\r\n[ASP.NET Core WebHooks](https://github.com/aspnet/webhooks) is only a partial port of [ASP.NET WebHooks](https://github.com/aspnet/aspnetwebhooks) and hasn't received sufficient attention during the ASP.NET Core 2.1 release for us to feel comfortable shipping it at this time. \r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1001877838369382400","CreatedAt":"2018-05-30T17:27:45+00:00","UserScreenname":"aspnet","Text":"Our latest release is now available.  Read all about the new #ASP.NET Core 2.1 at https://t.co/n1ZJsZ2YcE","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":146,"FavoriteCount":76,"RawContent":null},{"Id":"996435611354447872","CreatedAt":"2018-05-15T17:02:17+00:00","UserScreenname":"aspnet","Text":"And we're live! Join us as https://t.co/3dFxSj11IQ https://t.co/PAZDWtuk1r","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"996432221497057285","CreatedAt":"2018-05-15T16:48:49+00:00","UserScreenname":"aspnet","Text":"Starting soon - join us for an MVC Functional Testing overview with Javier Calvarro Nelson at… https://t.co/FavBvWbz0w","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":3,"RawContent":null},{"Id":"996146847939883009","CreatedAt":"2018-05-14T21:54:50+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nMVC Functional Testing with Javier Calvarro Nelson… https://t.co/twYeUUd1RO","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":30,"FavoriteCount":15,"RawContent":null},{"Id":"993841130545426433","CreatedAt":"2018-05-08T13:12:44+00:00","UserScreenname":"aspnet","Text":"Jeff will be pair-programming using @VisualStudio Live Share on an @aspnet Core project with YOU at the Live Share… https://t.co/i0sm9cCOGz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":2,"RawContent":null},{"Id":"991768334419902464","CreatedAt":"2018-05-02T19:56:11+00:00","UserScreenname":"aspnet","Text":"Blazor 0.3.0 experimental release now available\n\nhttps://t.co/2ixEeVbBbN https://t.co/3VB4sDxvwR","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":483,"FavoriteCount":273,"RawContent":null},{"Id":"991361559426314241","CreatedAt":"2018-05-01T16:59:49+00:00","UserScreenname":"aspnet","Text":"We're live! Join us at https://t.co/4Ioo9jNSN2 https://t.co/uGAnWHOWD5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":4,"RawContent":null},{"Id":"991092623849865217","CreatedAt":"2018-04-30T23:11:09+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nSignalR and Project Bedrock updates with @davidfowl… https://t.co/B8XmP5YkCW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":76,"FavoriteCount":35,"RawContent":null},{"Id":"989160632908791808","CreatedAt":"2018-04-25T15:14:07+00:00","UserScreenname":"aspnet","Text":"Do you have questions about how to work with ASPNet Core Identity?  Check out the video from yesterday's session wi… https://t.co/hjaoJRCR7l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":48,"FavoriteCount":14,"RawContent":null},{"Id":"988913487190544384","CreatedAt":"2018-04-24T22:52:03+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988873497614024704","CreatedAt":"2018-04-24T20:13:08+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/dCyzj19KZU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"988762250331676673","CreatedAt":"2018-04-24T12:51:05+00:00","UserScreenname":"aspnet","Text":"Our @csharpfritz and @coolcsh will be broadcasting LIVE from @ch9 studios and answering your questions today about… https://t.co/d37Sob12rv","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":10,"RawContent":null},{"Id":"986683993180590080","CreatedAt":"2018-04-18T19:12:50+00:00","UserScreenname":"aspnet","Text":"Tune in to the @PhillyDotNet user group today at 6pm ET / 3pm PT to learn more about Blazor from our MVP Chris Gome… https://t.co/D6svQPb95X","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":2,"RawContent":null},{"Id":"986310111256858624","CreatedAt":"2018-04-17T18:27:09+00:00","UserScreenname":"aspnet","Text":"Blazor 0.2.0 release now available https://t.co/rFE8xvlvM3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":249,"FavoriteCount":148,"RawContent":null}]}},"RunOn":"2018-05-31T05:30:14.3320424Z","RunDurationInMilliseconds":8442}